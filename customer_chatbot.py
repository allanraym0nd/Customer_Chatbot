# -*- coding: utf-8 -*-
"""Customer_ChatBot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Umquci-yCzkMEiROFxRF3oyJ4K6K1x0M
"""

categories = {
    "Billing": [
        "How can I update my payment method?",
        "I was charged twice on my last bill.",
        "Where is my invoice for last month?"
    ],
    "Technical Support": [
        "My internet is not working.",
        "I'm getting an error code 404.",
        "The software won't install properly."
    ],
    "General Inquiry": [
        "What are your business hours?",
        "Where is your main office located?",
        "How can I contact a human agent?"
    ]
}


keywords = {
    "Billing": ["payment", "invoice", "bill", "charge", "charged", "pricing", "cost", "money", "update"],
    "Technical Support": ["error", "problem", "not working", "issue", "bug", "software", "install", "device", "internet"],
    "General Inquiry": ["hours", "location", "contact", "human", "agent", "office", "business", "where", "what"]
}


predefined_responses = {
    "Billing": "For billing questions, please check your account settings or contact billing support during business hours.",
    "Technical Support": "Please try restarting your device. If the problem persists, contact technical support with your device details.",
    "General Inquiry": "Our business hours are 9 AM to 5 PM, Monday to Friday. You can find our main office location on our website."
}


frustration_keywords = ["angry", "frustrated", "not happy", "unhappy", "terrible", "bad service", "awful", "escalate"]
escalation_response = "I understand this is frustrating. Let me connect you with a human representative who can assist you immediately."
unknown_response = "I'm sorry, I couldn't understand your request. Could you please rephrase your question or try a different one?"

# chatbot

user_question = input("Please enter your customer support question: ")

print(f"\nUser: {user_question}\n")

# Standardizing input
processed_question = user_question.lower()
final_response = ""
final_category = "Unknown"


is_frustrated = any(word in processed_question for word in frustration_keywords)

if is_frustrated:
    final_category = "Human Agent Required"
    final_response = escalation_response
else:
    # count Keyword Matches for Each Category
    match_counts = {}
    for category, category_keywords in keywords.items():
        count = 0
        for keyword in category_keywords:
            if keyword in processed_question:
                count += 1
        match_counts[category] = count

    # determining Best-Match Category
    if match_counts:
        best_match_category = max(match_counts, key=match_counts.get)
        max_matches = match_counts[best_match_category]
    else:
        best_match_category = "Unknown"
        max_matches = 0

    # assigning category
    if max_matches > 0:
        final_category = best_match_category
        final_response = predefined_responses.get(final_category)
    else:
        final_category = "Unknown"
        final_response = unknown_response


print(f"**CLASSIFICATION:** {final_category}")
print(f"Chatbot: {final_response}")